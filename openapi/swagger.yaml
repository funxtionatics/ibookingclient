openapi: 3.0.0
info:
  title: iBookings API - Final
  description: iBooking components
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: http://funxtion.testing.ibooking.no/webapp/api
tags:
  - name: members
    description: pulling in members
  - name: gyms
    description: pulling in gyms
  - name: login
    description: handle login
  - name: event
    description: everything regarding events
  - name: ResourceBooking
    description: everything regarding ResourceBooking
  - name: Schedule
    description: everything regarding Scheduling
paths:
  /User/login:
    post:
      tags:
        - login
      summary: This method will upon success return a token that must be used for
        further communication with the API.
      operationId: login
      requestBody:
        description: LoginRequestParameters object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequestParameters'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
      security: []
  /User/logout:
    post:
      tags:
        - login
      summary: Invalidates the token provided, and resets any auth session used for
        other iBooking services.
      operationId: logout
      requestBody:
        description: Token to invalidate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogoutPayload'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
      security:
        - ApiKeyAuth: []
  /User/getUserInfo:
    get:
      tags:
        - members
      summary: This method will upon success return user info
      operationId: getUserInfo
      parameters:
        - name: userId
          in: query
          description: Either userId of username
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: username
          in: query
          description: Either userId of username
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfoResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - ApiKeyAuth: []
  /Chain/members:
    get:
      tags:
        - members
      summary: This method will list all the members in the same chain as the current
        company.
      operationId: getMembers
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - ApiKeyAuth: []
  /Chain/gyms:
    get:
      tags:
        - gyms
      summary: Get gyms
      operationId: getGyms
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GymsResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - ApiKeyAuth: []
  /Event/getEvents:
    get:
      tags:
        - event
      summary: Get events
      operationId: getEvents
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventsResponse'
      security:
        - ApiKeyAuth: []
  /Event/bookEvent:
    post:
      tags:
        - event
      summary: Book an event
      operationId: bookEvent
      requestBody:
        description: BookEventRequestPayload object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookEventRequestPayload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookEventResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - ApiKeyAuth: []
  /Event/cancelBooking:
    post:
      tags:
        - event
      summary: Cancel an event booking
      operationId: cancelEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelEventBookingPayload'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelEventResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - ApiKeyAuth: []
  /Event/getStudios:
    get:
      tags:
        - event
      summary: Return studios with events and their event categories
      operationId: getEventStudios
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStudiosEventResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - ApiKeyAuth: []
  /Event/getUserBookings:
    get:
      tags:
        - event
      summary: Return all event bookings of a user
      operationId: getUserEventBookings
      parameters:
        - name: userId
          in: query
          description: Either userId of username
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: username
          in: query
          description: Either userId of username
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEventUserBookingsResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - ApiKeyAuth: []
  /ResourceBooking/getActivities:
    get:
      tags:
        - ResourceBooking
      summary: Get activities
      operationId: getActivities
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetActivitiesResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - ApiKeyAuth: []
  /ResourceBooking/getActivityInfo:
    get:
      tags:
        - ResourceBooking
      summary: Get Activity Info
      operationId: getActivityInfo
      parameters:
        - name: id
          in: query
          description: Activity ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetActivityInfoResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - ApiKeyAuth: []
  /ResourceBooking/getSchedule:
    get:
      tags:
        - ResourceBooking
      summary: Returns class schedule
      operationId: getClassSchedule
      parameters:
        - name: sid
          in: query
          description: studio ID
          required: true
          schema:
            type: string
        - name: resourceIds
          in: query
          description: Comma separated list of resource IDs to include. All resources are returned by default.
          schema:
            type: string
        - name: from
          in: query
          description: Inclusive from date in format YYYY-MM-DD. If blank, today is used as from date.
          schema:
            type: string
            format: date
        - name: to
          in: query
          description: Inclusive to date in format YYYY-MM-DD. If blank, defaults to one week from from-field
          schema:
            type: string
            format: date
        - name: lang
          in: query
          description: 'Language code in ISO 3166-1 alpha-2 format. Default value: NO'
          schema:
            type: string
            default: NO
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResourceBookingScheduleResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - ApiKeyAuth: []
  /ResourceBooking/removeBooking:
    post:
      tags:
        - ResourceBooking
      summary: Remove resource booking
      operationId: removeResourceBooking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveResourceBookingPayload'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - ApiKeyAuth: []
  /Schedule/getBasicInfo:
    get:
      tags:
        - Schedule
      summary: This method returns basic information, and optionally also the output of the getStudios and getInstructors methods.
      operationId: getBasicInfo
      parameters:
        - name: includeStudios
          in: query
          description: If true, the output will include the output from getStudios.
          schema:
            type: boolean
        - name: includeInstructors
          in: query
          description: If true, the output will include the output from getInstructors.
          schema:
            type: boolean
        - name: onlyWithFutureClasses
          in: query
          description: 'If true, only instructors with classes today or later will be returned from getInstructors. Default value: 0'
          schema:
            type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBasicInfoResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - ApiKeyAuth: []
  /Schedule/getStudios:
    get:
      tags:
        - Schedule
      summary: This method returns a full list of all studios that belongs to the parent entity.
      operationId: getScheduleStudios
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetScheduleStudiosResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - ApiKeyAuth: []
  /Schedule/getInstructors:
    get:
      tags:
        - Schedule
      summary: This method returns a full list of all group class instructors.
      parameters:
        - name: onlyWithFutureClasses
          in: query
          description: 'Only list instructors with classes today or in the future. Default value: 0'
          schema:
            type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetScheduleInstructorsResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - ApiKeyAuth: []
  /Schedule/getClass:
    get:
      tags:
        - Schedule
      summary: 'Will return all information related to a group class, including descriptions and/or images of the class/instructors.'
      parameters:
        - name: id
          in: query
          description: The unique ID for the class to get information about.
          schema:
            type: integer
          required: true
        - name: lang
          in: query
          description: 'Language code in ISO 3166-1 alpha-2 format. Default value: NO'
          schema:
            type: string
        - name: token
          in: query
          description: A user authorization token.
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGroupClassesResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - ApiKeyAuth: []
  /Schedule/getSchedule:
    get:
      tags:
        - Schedule
      summary: Will return the group class schedule. All parameters are GET parameters.
      parameters:
        - name: studios
          in: query
          description: Comma separated list of studio IDs to include. All studios are returned by default.
          schema:
            type: string
        - name: categories
          in: query
          description: Comma separated list of category IDs to include. All categories are returned by default.
          schema:
            type: string
        - name: instructors
          in: query
          description: Comma separated list of instructor IDs to include. All instructors are returned by default.
          schema:
            type: string
        - name: from
          in: query
          description: Inclusive from date in format YYYY-MM-DD. If blank, today is used as from date.
          schema:
            type: string
            format: date
        - name: lang
          in: query
          description: 'Language code in ISO 3166-1 alpha-2 format. Default value: NO'
          schema:
            type: string
        - name: token
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetScheduleScheduleResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - ApiKeyAuth: []
  /Schedule/addBooking:
    post:
      tags:
        - Schedule
      summary: This method adds a booking to the provided class for the provided user (via token).
      requestBody:
        description: AddBookingRequestParameters object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddBookingPayload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddScheduleBookingResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - ApiKeyAuth: []
  /Schedule/cancelBooking:
    post:
      tags:
        - Schedule
      summary: This method cancels/deletes a booking from the provided class for the provided user (via token).
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelScheduleBookingPayload'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelScheduleBookingResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - ApiKeyAuth: []
  /ResourceBooking/addBooking:
    post:
      tags:
        - ResourceBooking
      summary: Add resource booking.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddBookingPayload'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddResourceBookingResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - ApiKeyAuth: []
  /User/getBookings:
    get:
      tags:
        - members
      summary: This method returns a list of the bookings for a user. Sorted descending by class.from.
      parameters:
        - name: token
          description: The user's token
          in: query
          schema:
            type: string
          required: true
        - name: limit
          description: 'How many bookings to return. Default: 60'
          in: query
          schema:
            type: integer
        - name: sort
          in: query
          description: 'Default: desc'
          schema:
            type: string
            enum:
              - asc
              - desc
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserBookingsResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - ApiKeyAuth: []
components:
  schemas:
    UserInfoResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstname:
          type: string
        lastname:
          type: string
        expires:
          type: string
          description: 'Membership expires at this time. Format: YYYY-MM-DD HH:MM:SS.'
        activeBlock:
          type: boolean
          description: If true, the member can't book online.
        email:
          type: string
        phone:
          type: string
        username:
          type: string
        cardnumber:
          type: string
          nullable: true
        customerNumber:
          type: integer
          format: int64
        studio:
          type: integer
          description: Studio ID
          format: int64
        contract:
          $ref: '#/components/schemas/Contract'
        noshowCount:
          type: integer
          description: Current active noshow count
          format: int64
        avtalegiroStatus:
          type: string
          description: '{new,not-applicable,signed,revoked,unknown}.'
          enum:
            - new
            - not-applicable
            - signed
            - revoked
            - unkown
        dateOfBirth:
          type: string
          description: 'Format: YYYY-MM-DD.'
          format: date
        address:
          $ref: '#/components/schemas/Address'
        hasPassword:
          type: boolean
    Contract:
      type: object
      properties:
        offeringCode:
          type: integer
          format: int64
        name:
          type: string
        start:
          type: string
          description: 'Format: YYYY-MM-DD.'
          format: date
        end:
          type: string
          description: 'Format: YYYY-MM-DD.'
          format: date
    Address:
      type: object
      properties:
        street:
          type: string
          nullable: true
        street1:
          type: string
          nullable: true
        street2:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
    LoginRequestParameters:
      required:
        - password
        - username
      type: object
      properties:
        username:
          type: string
          description: The username of the user logging in.
        password:
          type: string
          description: The password of the user logging in.
        lang:
          type: string
          description: Language code in ISO 3166-1 alpha-2 format.
          default: "NO"
        ttl:
          type: string
          description: Token Time To Live in seconds.
          default: "3600"
        accessToken:
          type: string
          description: Access token for server-to-server requests.
        spc:
          type: boolean
          description: If true, the password field will be optional. Requires valid
            accessToken.
          default: false
    LoginResponse:
      type: object
      properties:
        authToken:
          type: string
          description: A token that identifies and authenticates the user.
        authTokenExpires:
          type: string
          description: A timestamp in YYYY-MM-DD HH:MM:SS format stating when the
            authToken expires.
        user:
          $ref: '#/components/schemas/UserInfoResponse'
    CommunicationChannels:
      type: object
      properties:
        sms:
          type: boolean
        email:
          type: boolean
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: An error message saying why it failed
        errorCode:
          type: integer
        errorMessage:
          type: string
    Member:
      type: object
      properties:
        id:
          type: integer
          format: int64
        customerNumber:
          type: integer
          format: int64
        username:
          type: string
          nullable: true
        firstname:
          type: string
        lastname:
          type: string
        dateOfBirth:
          type: string
          format: date
          nullable: true
        gender:
          type: string
          enum:
            - male
            - female
            - none
        gym:
          type: object
          properties:
            companyId:
              type: integer
              format: int64
            studioId:
              type: integer
              format: int64
            companyName:
              type: string
            studionName:
              type: string
            baseUrl:
              type: string
        phone:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        address:
          $ref: '#/components/schemas/Address'
        firstCreated:
          type: string
          format: date
        contractStarted:
          type: string
          format: date
          nullable: true
        offerings:
          type: array
          items:
            type: integer
            format: int64
        active:
          type: boolean
        frozen:
          type: boolean
        hasAcceptedCommunication:
          $ref: '#/components/schemas/CommunicationChannels'
        inLoyalityProgram:
          type: boolean
    Gym:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        baseUrl:
          type: string
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    Event:
      type: object
      properties:
        id:
          type: integer
          format: int64
        categoryId:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        image:
          type: string
        capacity:
          type: integer
          format: int32
        available:
          type: integer
          format: int32
        membersOnly:
          type: boolean
        prices:
          $ref: '#/components/schemas/Price'
        dates:
          type: array
          items:
            $ref: '#/components/schemas/EventSpecifics'
        studio:
          type: object
          properties:
            id:
              type: integer
              format: int64
            name:
              type: string
    Price:
      type: object
      properties:
        all:
          type: number
          format: double
          description: 'Price for both members and non-members. If used, events.prices.member and events.prices.notMember are not in use.'
        member:
          type: number
          format: double
          description: 'Price for members. If used, events.prices.all are not in use.'
        notMember:
          type: number
          format: double
          description: 'Price for non-members. If used, events.prices.all are not in use.'
    EventSpecifics:
      type: object
      properties:
        from:
          type: string
          format: date-time
        to:
          type: string
          format: date-time
        room:
          type: string
        instructor:
          type: string
    Activity:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        description:
          type: string
          nullable: true
        image:
          type: string
          nullable: true
        video:
          type: string
          nullable: true
        studio:
          type: object
          properties:
            id:
              type: number
            name:
              type: string
    BookEventRequestPayload:
      type: object
      properties:
        eventId:
          type: integer
          format: int64
        username:
          type: string
        name:
          type: string
        address:
          type: string
        postalCode:
          type: string
        city:
          type: string
        dateOfBirth:
          type: string
        gender:
          type: string
          enum:
            - M
            - F
        mobile:
          type: string
        mobileCountryCode:
          type: string
        email:
          type: string
        payStatus:
          type: string
          enum:
            - paid
            - unpaid
        payRef:
          type: string
      required: [eventId, name, address, postalCode, city, dateOfBirth, gender, modeil, email, payStatus]
    Coordinates:
      type: object
      properties:
        latitude:
          type: number
          format: float
          nullable: true
        longitude:
          type: number
          format: float
          nullable: true
    Category:
      type: object
      properties:
        excelineId:
          type: integer
          format: int64
        name:
          type: string
        resourceId:
          type: string
        image:
          type: string
        color:
          type: string
        id:
          type: string
    GetEventUserBookingsResponse:
      type: array
      items:
        $ref: '#/components/schemas/Booking'
    Booking:
      type: object
      properties:
        bookingId:
          type: integer
          format: int64
        categoryId:
          type: integer
          format: int64
        eventId:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        payStatus:
          type: string
          enum:
            - paid
            - unpaid
        payRef:
          type: string
        studio:
          type: object
          properties:
            id:
              type: integer
              format: int64
            name:
              type: string
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        address:
          type: string
        postalCode:
          type: string
        city:
          type: string
        dateOfBirth:
          type: string
          format: date
        gender:
          type: string
          enum:
            - M
            - F
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
    GetClassScheduleResponse:
      type: object
      properties:
        days:
          type: array
          items:
            $ref: '#/components/schemas/DaySchedule'
    DaySchedule:
      type: object
      properties:
        date:
          type: string
          format: date
        bookingOpensAt:
          type: string
          format: date-time
        rows:
          type: array
          items:
            $ref: '#/components/schemas/DayScheduleRow'
    DayScheduleRow:
      type: object
      properties:
        from:
          type: string
          format: date-time
        to:
          type: string
          format: date-time
        classes:
          type: array
          items:
            $ref: '#/components/schemas/ActivityClass'
    ActivityClass:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        price:
          type: number
          format: float
        paymentStatus:
          type: string
          enum:
            - paid
            - notpaid
        booked:
          type: boolean
        bookable:
          type: boolean
        myBooking:
          type: boolean
        bookingId:
          type: integer
        userStatus:
          type: string
          enum:
            - available
            - booked
            - noshow
        color:
          type: string
        booker:
          type: object
          properties:
            id:
              type: integer
              format: int64
            firstname:
              type: string
            lastname:
              type: string
        from:
          type: string
          format: date-time
        to:
          type: string
          format: date-time
        date:
          type: string
          format: date
        studio:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
        resource:
          type: object
          properties:
            id:
              type: integer
              format: int64
            name:
              type: string
        activity:
          type: object
          properties:
            id:
              type: integer
              format: int64
            name:
              type: string
    ScheduleStudio:
      type: object
      properties:
        id:
          type: integer
          format: int64
        sid:
          type: integer
          format: int64
          deprecated: true
        name:
          type: string
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    Instructor:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        image:
          type: string
    GetBasicInfoResponse:
      type: object
      properties:
        name:
          type: string
        studios:
          type: array
          items:
            $ref: '#/components/schemas/ScheduleStudio'
        instructors:
          type: array
          items:
            $ref: '#/components/schemas/Instructor'
    GroupFitnessClass:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        from:
          type: string
          format: date-time
        to:
          type: string
          format: date-time
        description:
          type: string
        image:
          type: string
        studio:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
        category:
          $ref: '#/components/schemas/Category'
        available:
          type: integer
          description: Number of seats available
        capacity:
          type: integer
        color:
          type: string
        instructors:
          type: array
          items:
            $ref: '#/components/schemas/Instructor'
        room:
          type: string
        video:
          type: string
        bookable:
          type: boolean
        bookingOpensAt:
          type: string
          format: date-time
        userStatus:
          type: string
          enum:
            - available
            - booked
            - waitlist
            - noshow
        waitlist:
          type: object
          properties:
            active:
              type: boolean
            count:
              type: integer
              description: Number fo people in the waiting list
            userPosition:
              type: integer
        cancellationPenalty:
          type: boolean
        cancelText:
          type: string
        note:
          type: string
    AddBookingPayload:
      type: object
      properties:
        classId:
          type: integer
        token:
          type: string
        smsReminder:
          type: boolean
        lang:
          type: string
      required: [classId, token]
    CancelScheduleBookingPayload:
      type: object
      properties:
        classId:
          type: integer
          format: int64
        token:
          type: string
        lang:
          type: string
      required: [classId, token]
    LogoutPayload:
      type: object
      properties:
        token:
          type: string
    CancelEventBookingPayload:
      type: object
      properties:
        bookingId:
          type: integer
    RemoveResourceBookingPayload:
      type: object
      properties:
        token:
          type: string
        id:
          type: integer
      required: [token, id]
    Success:
      type: object
      properties:
        success:
          type: boolean
    MembersResponse:
      type: object
      properties:
        count:
          type: integer
        members:
          type: array
          items:
            $ref: '#/components/schemas/Member'
    GymsResponse:
      type: object
      properties:
        gyms:
          type: array
          items:
            $ref: '#/components/schemas/Gym'
    EventsResponse:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
    BookEventResponse:
      type: object
      properties:
        success:
          type: boolean
        id:
          type: integer
          description: id of the booking
    CancelEventResponse:
      type: object
      properties:
        success:
          type: boolean
    GetStudiosEventResponse:
      type: object
      properties:
        studios:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: int64
              categories:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    description:
                      type: string
    GetActivitiesResponse:
      type: object
      properties:
        activities:
          type: array
          items:
            $ref: '#/components/schemas/Activity'
    GetActivityInfoResponse:
      type: object
      properties:
        activity:
          $ref: '#/components/schemas/Activity'
    GetResourceBookingScheduleResponse:
      type: array
      items:
        $ref: '#/components/schemas/GetClassScheduleResponse'
    GetScheduleStudiosResponse:
      type: object
      properties:
        studios:
          type: array
          items:
            $ref: '#/components/schemas/ScheduleStudio'
    GetScheduleInstructorsResponse:
      type: object
      properties:
        instructors:
          type: array
          items:
            $ref: '#/components/schemas/Instructor'
    GetGroupClassesResponse:
      type: object
      properties:
        class:
          type: array
          items:
            $ref: '#/components/schemas/GroupFitnessClass'
    GetScheduleScheduleResponse:
      type: object
      properties:
        days:
          type: array
          items:
            type: object
            properties:
              dayName:
                type: string
              date:
                type: string
                format: date
              bookingOpensAt:
                type: string
                format: date-time
              classes:
                type: array
                items:
                  $ref: '#/components/schemas/GroupFitnessClass'
    AddScheduleBookingResponse:
      type: object
      properties:
        success:
          type: boolean
        waitlist:
          type: boolean
        waitlistPosition:
          type: integer
        class:
          $ref: '#/components/schemas/GroupFitnessClass'
    CancelScheduleBookingResponse:
      type: object
      properties:
        success:
          type: boolean
        penalty:
          type: boolean
        class:
          $ref: '#/components/schemas/GroupFitnessClass'
    AddResourceBookingResponse:
      type: object
      properties:
        success:
          type: boolean
        bookingId:
          type: integer
    GetUserBookingsResponse:
      type: object
      properties:
        bookings:
          type: array
          items:
            type: object
            properties:
              class:
                $ref: '#/components/schemas/GroupFitnessOrActivityClass'
              status:
                type: string
                enum:
                  - booked
                  - confirmed
                  - noshow
              type:
                type: string
                enum:
                  - groupclass
                  - resource
    GroupFitnessOrActivityClass:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        from:
          type: string
          format: date-time
        to:
          type: string
          format: date-time
        description:
          type: string
        image:
          type: string
        studio:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
        category:
          $ref: '#/components/schemas/Category'
        available:
          type: integer
          description: Number of seats available
        capacity:
          type: integer
        color:
          type: string
        instructors:
          type: array
          items:
            $ref: '#/components/schemas/Instructor'
        room:
          type: string
        video:
          type: string
        bookable:
          type: boolean
        bookingOpensAt:
          type: string
          format: date-time
        userStatus:
          type: string
          enum:
            - available
            - booked
            - waitlist
            - noshow
        waitlist:
          type: object
          properties:
            active:
              type: boolean
            count:
              type: integer
              description: Number fo people in the waiting list
            userPosition:
              type: integer
        cancellationPenalty:
          type: boolean
        cancelText:
          type: string
        note:
          type: string
        price:
          type: number
          format: float
        paymentStatus:
          type: string
          enum:
            - paid
            - notpaid
        booked:
          type: boolean
        myBooking:
          type: boolean
        bookingId:
          type: integer
        booker:
          type: object
          properties:
            id:
              type: integer
              format: int64
            firstname:
              type: string
            lastname:
              type: string
        date:
          type: string
          format: date
        resource:
          type: object
          properties:
            id:
              type: integer
              format: int64
            name:
              type: string
        activity:
          type: object
          properties:
            id:
              type: integer
              format: int64
            name:
              type: string
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: X-Access-Token
      in: header
